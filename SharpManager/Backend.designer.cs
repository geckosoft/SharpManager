#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharpManager
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="SharpManager")]
	public partial class BackendDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGebruiker(Gebruiker instance);
    partial void UpdateGebruiker(Gebruiker instance);
    partial void DeleteGebruiker(Gebruiker instance);
    #endregion
		
		public BackendDataContext() : 
				base(global::SharpManager.Properties.Settings.Default.SharpManagerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BackendDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BackendDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BackendDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BackendDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Gebruiker> Gebruikers
		{
			get
			{
				return this.GetTable<Gebruiker>();
			}
		}
	}
	
	[Table(Name="dbo.gebruikers")]
	public partial class Gebruiker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _GebruikerId;
		
		private string _GebruikerNaam;
		
		private string _Naam;
		
		private string _Voornaam;
		
		private System.DateTime _GeboorteDatum;
		
		private System.Nullable<System.DateTime> _LaatsteLogin;
		
		private int _AantalLogins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGebruikerIdChanging(byte value);
    partial void OnGebruikerIdChanged();
    partial void OnGebruikerNaamChanging(string value);
    partial void OnGebruikerNaamChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnVoornaamChanging(string value);
    partial void OnVoornaamChanged();
    partial void OnGeboorteDatumChanging(System.DateTime value);
    partial void OnGeboorteDatumChanged();
    partial void OnLaatsteLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLaatsteLoginChanged();
    partial void OnAantalLoginsChanging(int value);
    partial void OnAantalLoginsChanged();
    #endregion
		
		public Gebruiker()
		{
			OnCreated();
		}
		
		[Column(Storage="_GebruikerId", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte GebruikerId
		{
			get
			{
				return this._GebruikerId;
			}
			set
			{
				if ((this._GebruikerId != value))
				{
					this.OnGebruikerIdChanging(value);
					this.SendPropertyChanging();
					this._GebruikerId = value;
					this.SendPropertyChanged("GebruikerId");
					this.OnGebruikerIdChanged();
				}
			}
		}
		
		[Column(Storage="_GebruikerNaam", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string GebruikerNaam
		{
			get
			{
				return this._GebruikerNaam;
			}
			set
			{
				if ((this._GebruikerNaam != value))
				{
					this.OnGebruikerNaamChanging(value);
					this.SendPropertyChanging();
					this._GebruikerNaam = value;
					this.SendPropertyChanged("GebruikerNaam");
					this.OnGebruikerNaamChanged();
				}
			}
		}
		
		[Column(Storage="_Naam", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[Column(Storage="_Voornaam", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Voornaam
		{
			get
			{
				return this._Voornaam;
			}
			set
			{
				if ((this._Voornaam != value))
				{
					this.OnVoornaamChanging(value);
					this.SendPropertyChanging();
					this._Voornaam = value;
					this.SendPropertyChanged("Voornaam");
					this.OnVoornaamChanged();
				}
			}
		}
		
		[Column(Storage="_GeboorteDatum", DbType="DateTime NOT NULL")]
		public System.DateTime GeboorteDatum
		{
			get
			{
				return this._GeboorteDatum;
			}
			set
			{
				if ((this._GeboorteDatum != value))
				{
					this.OnGeboorteDatumChanging(value);
					this.SendPropertyChanging();
					this._GeboorteDatum = value;
					this.SendPropertyChanged("GeboorteDatum");
					this.OnGeboorteDatumChanged();
				}
			}
		}
		
		[Column(Storage="_LaatsteLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LaatsteLogin
		{
			get
			{
				return this._LaatsteLogin;
			}
			set
			{
				if ((this._LaatsteLogin != value))
				{
					this.OnLaatsteLoginChanging(value);
					this.SendPropertyChanging();
					this._LaatsteLogin = value;
					this.SendPropertyChanged("LaatsteLogin");
					this.OnLaatsteLoginChanged();
				}
			}
		}
		
		[Column(Storage="_AantalLogins", DbType="Int NOT NULL")]
		public int AantalLogins
		{
			get
			{
				return this._AantalLogins;
			}
			set
			{
				if ((this._AantalLogins != value))
				{
					this.OnAantalLoginsChanging(value);
					this.SendPropertyChanging();
					this._AantalLogins = value;
					this.SendPropertyChanged("AantalLogins");
					this.OnAantalLoginsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
